{"version":3,"file":"index.js","sources":["../src/lib/history.js","../src/lib/auth-guard.js","../src/lib/location-reducer.js","../node_modules/path-to-regexp/node_modules/isarray/index.js","../node_modules/path-to-regexp/index.js","../src/lib/router.js","../src/index.js"],"sourcesContent":["import createBrowserHistory from 'history/createBrowserHistory'\n\nconst history = createBrowserHistory()\n\nexport const bindHistory = store => {\n  history.listen((location, method) => {\n    store.dispatch({ type: 'navigate', payload: { location, method } })\n  })\n}\n\nexport const navigate = (pathname, search, hash) => history.push({ pathname, search, hash })\nexport const navigateReplace = (pathname, search, hash) => history.replace({ pathname, search, hash })\nexport const navigateBack = () => history.goBack()\n\nexport default history\n","import history, { navigateReplace } from './history'\n\nconst REDIRECT_START_REGEX = /^\\?redirect=([\\w%\\d-]+)/\nconst REDIRECT_MID_REGEX = /&redirect=([\\w%\\d-]+)/\n\nexport default {\n  authOnly: (loginUrl = '/login', test = (props => props.auth.valid)) => props => {\n    if (test(props)) return true\n\n    let query = ''\n    if (history.location.pathname !== '/') {\n      if (history.location.search) {\n        query = history.location.search + '&'\n      } else {\n        query = '?'\n      }\n      query += 'redirect=' + encodeURIComponent(history.location.pathname)\n    }\n\n    navigateReplace(loginUrl, query)\n    return false\n  },\n\n  anonOnly: (rootUrl = '/', test = (props => props.auth.valid)) => props => {\n    if (!test(props)) return true\n\n    let redirect = ''\n    let query = history.location.search\n\n    let result = REDIRECT_START_REGEX.exec(query)\n    if (result) {\n      redirect = decodeURIComponent(result[1])\n      query = query.substr(result[0].length + 1)\n      if (query) query = '?' + query\n    } else {\n      result = REDIRECT_MID_REGEX.exec(query)\n      if (result) {\n        redirect = decodeURIComponent(result[1])\n        query = query.substring(0, result.index) + query.substring(result.index + result[0].length)\n      }\n    }\n\n    navigateReplace(redirect || rootUrl, query)\n    return false\n  }\n}\n","const DEFAULT = {\n  pathname: window.location.pathname,\n  search: '',\n  hash: '',\n  method: 'PUSH'\n}\n\nexport default (state = DEFAULT, action) => {\n  if (action.type === 'navigate') {\n    const { location, method } = action.payload\n    return {\n      ...state,\n      ...location,\n      method\n    }\n  }\n  return state\n}\n","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","var isarray = require('isarray')\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = options && options.delimiter || '/'\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    var next = str[index]\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var modifier = res[6]\n    var asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var partial = prefix != null && next != null && next !== prefix\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = res[2] || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (obj, opts) {\n    var path = ''\n    var data = obj || {}\n    var options = opts || {}\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n","import React from 'react'\nimport toRegex from 'path-to-regexp'\nimport history, { navigateReplace } from './history'\n\nexport default class Router extends React.Component {\n  constructor (props) {\n    super(props)\n\n    // Compute route regexes\n    this.routes = {}\n    this.routePaths = Object.keys(props.routes)\n    this.routePaths.forEach(path => {\n      const action = props.routes[path].action || props.routes[path]\n      const guard = props.routes[path].guard || null\n      const keys = []\n      const pattern = toRegex(path, keys, { end: false })\n\n      this.routes[path] = { pattern, keys, action, guard }\n    })\n\n    // Convert root to regex if not already\n    let root = props.root\n    if (root && !(root instanceof RegExp)) {\n      root = toRegex(root, [], { end: false })\n    }\n\n    this.state = {\n      root,\n      route: null,\n      pathname: window.location.pathname,\n      redirect: ''\n    }\n  }\n\n  componentDidMount () {\n    this.updateRoute(history.location.pathname)\n  }\n\n  componentWillReceiveProps (nextProps) {\n    // On path change, update route\n    if (this.state.pathname !== nextProps.location.pathname) {\n      return this.updateRoute(nextProps.location.pathname)\n    }\n\n    // If there is already a route, check the auth/anon requirements\n    if (this.state.route && this.state.route.guard) {\n      this.state.route.guard(nextProps)\n    }\n  }\n\n  updateRoute (pathname) {\n    // Trim off root from pathname\n    let relativePathname = pathname\n    let trimmedRoot = ''\n    if (this.state.root) {\n      let rootResult = this.state.root.exec(pathname)\n      if (rootResult) {\n        relativePathname = pathname.substr(rootResult[0].length)\n        trimmedRoot = rootResult[0]\n      }\n    }\n\n    // Loop through routes to find match\n    for (let i = 0; i < this.routePaths.length; i++) {\n      let routePath = this.routePaths[i]\n      let route = this.routes[routePath]\n      let match = route.pattern.exec(relativePathname)\n      if (!match) continue\n\n      // Parse params\n      let params = {}\n      for (let i = 1; i < match.length; i++) {\n        if (match[i] !== undefined) {\n          params[route.keys[i - 1].name] = match[i]\n        }\n      }\n\n      // Handle redirects if the action is a string\n      if (typeof route.action === 'string') {\n        let redirect = route.action\n\n        // Fill in missing params\n        if (match.length > 0) {\n          for (let key of route.keys) {\n            redirect = redirect.replace(':' + key, params[key])\n          }\n        }\n\n        // Include any trimmed off root portion and redirect\n        console.log(`@router/UPDATE redirecting to ${redirect}`)\n        return navigateReplace(trimmedRoot + redirect, history.location.search)\n      }\n\n      // Check route guard\n      if (route.guard && !route.guard(this.props)) return\n      console.log(`@router/UPDATE ${pathname}`)\n\n      // Return matched route\n      return this.setState({ route, pathname, relativePathname, params })\n    }\n\n    throw new Error(`Failed to find route for path: ${pathname}. (router: ${this.props.root || '/'})`)\n  }\n\n  render () {\n    const { route, relativePathname, params } = this.state\n\n    // Show loading screen for initial state/redirects\n    if (!route || typeof route.action !== 'function') {\n      if (this.props.loader) return this.props.loader(this.props)\n      return null\n    }\n\n    // Merge location objects from parent routers with local data\n    const location = {\n      ...this.props.location,\n      relativePathname,\n      params: {\n        ...this.props.location.params,\n        ...params\n      }\n    }\n\n    const Component = route.action\n    return <Component {...this.props} location={location} />\n  }\n}\n","import AuthGuard from './lib/auth-guard'\nimport History from './lib/history'\nimport LocationReducer from './lib/location-reducer'\nimport Router from './lib/router'\n\nexport default {\n  AuthGuard,\n  History,\n  LocationReducer,\n  Router\n}\n"],"names":["history","createBrowserHistory","navigateReplace","pathname","search","hash","replace","REDIRECT_START_REGEX","REDIRECT_MID_REGEX","loginUrl","test","props","auth","valid","query","location","encodeURIComponent","rootUrl","redirect","result","exec","decodeURIComponent","substr","length","substring","index","DEFAULT","window","state","action","type","payload","method","Router","routes","routePaths","Object","keys","forEach","path","guard","pattern","toRegex","end","root","RegExp","updateRoute","nextProps","route","relativePathname","trimmedRoot","rootResult","i","routePath","match","params","undefined","name","key","log","setState","Error","loader","Component","React"],"mappings":"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"}